{"ts":1373750951184,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#!/usr/bin/env node\nvar fs = require('fs');\nvar program = require('commander');\nvar cheerio = require('cheerio');\nvar rest = require('restler');\nvar HTMLFILE_DEFAULT = \"index.html\";\nvar CHECKSFILE_DEFAULT = \"checks.json\";\nvar pagehtml = \"\";\n\nvar assertFileExists = function(infile) {\n    var instr = infile.toString();\n    if(!fs.existsSync(instr)) {\n        console.log(\"%s does not exist. Exiting.\", instr);\n        process.exit(1); // http://nodejs.org/api/process.html#process_process_exit_code\n    }\n    return instr;\n};\n\n\n\nvar cheerioHtmlFile = function(htmlfile) {\n    return cheerio.load(fs.readFileSync(htmlfile));\n};\n\nvar loadChecks = function(checksfile) {\n    return JSON.parse(fs.readFileSync(checksfile));\n};\n\nvar checkHtmlFile = function(htmlfile, checksfile) {\n    $ = cheerioHtmlFile(htmlfile);\n    var checks = loadChecks(checksfile).sort();\n    var out = {};\n    for(var ii in checks) {\n        var present = $(checks[ii]).length > 0;\n        out[checks[ii]] = present;\n    }\n    return out;\n};\n\nvar clone = function(fn) {\n    // Workaround for commander.js issue.\n    // http://stackoverflow.com/a/6772648\n    return fn.bind({});\n};\n\nif(require.main == module) {\n    program\n        .option('-c, --checks <check_file>', 'Path to checks.json', clone(assertFileExists), CHECKSFILE_DEFAULT)\n        .option('-f, --file <html_file>', 'Path to index.html', clone(assertFileExists), HTMLFILE_DEFAULT)\n        .option('-u, --url <url_file>', 'URL to html', \"NONE\")\n\t.parse(process.argv);\n    if (program.url == \"NONE\"){\n\tvar checkJson = checkHtmlFile(program.file, program.checks);\n\t}\n    else{\n\trest.get(program.url).on('complete', function(result) {\n\t    pagehtml = result;\n\t    }\n\t);\n\tvar checkJson = checkHtmlFile(pagehtml, program.checks);\n\t}\n    var checkJson = checkHtmlFile(program.file, program.checks);\n    var outJson = JSON.stringify(checkJson, null, 4);\n    console.log(outJson);\n} else {\n    exports.checkHtmlFile = checkHtmlFile;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1960}]],"length":1960}
{"ts":1373751075210,"patch":[[{"diffs":[[0,") {\n    "],[1,"var "],[0,"$ = chee"]],"start1":773,"start2":773,"length1":16,"length2":20}]],"length":1964,"saved":false}
{"ts":1373751161805,"patch":[[{"diffs":[[0,"sult) {\n"],[-1,"\t"],[1,"    "],[0,"    page"]],"start1":1661,"start2":1661,"length1":17,"length2":20},{"diffs":[[0,"esult;\n\t"],[-1,"    "],[0,"}\n\t);\n\tv"]],"start1":1689,"start2":1689,"length1":20,"length2":16}]],"length":1963,"saved":false}
{"ts":1373751253637,"patch":[[{"diffs":[[0,".argv);\n"],[1,"    console.log(program.url)\n"],[0,"    if ("]],"start1":1497,"start2":1497,"length1":16,"length2":45}]],"length":1992,"saved":false}
{"ts":1373751256362,"patch":[[{"diffs":[[0,"ram.url)"],[1,";"],[0,"\n    if "]],"start1":1525,"start2":1525,"length1":16,"length2":17}]],"length":1993,"saved":false}
{"ts":1373751496435,"patch":[[{"diffs":[[0,"rn out;\n};\n\n"],[1,"var checkURLHTML = function(url, checksfile) {\n    var $ = cheerio.load(url);\n    var checks = loadChecks(checksfile).sort();\n    var out = {};\n    for(var ii in checks) {\n        var present = $(checks[ii]).length > 0;\n        out[checks[ii]] = present;\n    }\n    return out;\n};\n\n"],[0,"var clone = "]],"start1":1007,"start2":1007,"length1":24,"length2":305},{"diffs":[[0," = check"],[-1,"HtmlFile"],[1,"URLHTML"],[0,"(pagehtm"]],"start1":2028,"start2":2028,"length1":24,"length2":23}]],"length":2273,"saved":false}
